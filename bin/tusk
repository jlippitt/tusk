#!/usr/bin/php
<?php

require_once(__DIR__ . '/../vendor/autoload.php');

function describe($description, \Closure $body)
{
    $container = Tusk\Container::getInstance();
    $env = $container['Environment'];
    $env->execute($container['Suite']($description, $body, $env->getContext()));
}

function xdescribe($description, \Closure $body)
{
    $container = Tusk\Container::getInstance();

    $container['Environment']->skip(function() use ($description, $body) {
        describe($description, $body);
    });
}

function it($description, \Closure $body)
{
    $container = Tusk\Container::getInstance();
    $env = $container['Environment'];
    $env->execute($container['Spec']($description, $body, $env->getContext()));
}

function xit($description, \Closure $body)
{
    $container = Tusk\Container::getInstance();

    $container['Environment']->skip(function() use ($description, $body) {
        it($description, $body);
    });
}

function expect($value)
{
    $container = Tusk\Container::getInstance();
    return $container['ExpectationFactory']->createExpectation($value);
}

function beforeEach(\Closure $body)
{
    $container = Tusk\Container::getInstance();
    $container['Environment']->getContext()->addPreHook($body);
}

function afterEach(\Closure $body)
{
    $container = Tusk\Container::getInstance();
    $container['Environment']->getContext()->addPostHook($body);
}

Tusk\Container::getInstance()['Application']->run(
    null,
    Tusk\Container::getInstance()['ConsoleOutput']
);
